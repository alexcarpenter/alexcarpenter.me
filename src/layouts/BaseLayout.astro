---
import "../styles/global.css";
import { NAVIGATION, SITE_VERSION, SOCIALS } from "@/consts";
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const { title, description } = Astro.props;
const metaTitle = title ? `${title} // Alex Carpenter` : "Alex Carpenter";
const metaDescription = description ? description : "UI Engineer";
import { Icon } from "astro-icon/components";
// const commitSha = import.meta.env.PUBLIC_VERCEL_GIT_COMMIT_SHA || "dfa9be2";
// const commitMsg =
//   import.meta.env.PUBLIC_VERCEL_GIT_COMMIT_MESSAGE ||
//   "checkpoint at 2024-08-26T12:16:53-0400";
---

<html lang="en">
  <head>
    <link
      rel="preload"
      href="/fonts/GeistVariableVF.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />

    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Primary Meta Tags -->
    <title>{metaTitle}</title>
    <meta name="title" content={metaTitle} />
    <meta name="description" content={metaDescription} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={metaDescription} />
    <!-- <meta property="og:image" content={new URL(image, Astro.url)} /> -->

    <!-- Twitter -->
    <meta property="twitter:card" content="summary" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={metaTitle} />
    <meta property="twitter:description" content={metaDescription} />
    <!-- <meta property="twitter:image" content={new URL(image, Astro.url)} /> -->

    <!-- Sitemap -->
    <link rel="sitemap" href={new URL("/sitemap-index.xml", Astro.site)} />

    <!-- RSS -->
    <link
      rel="alternate"
      type="application/rss+xml"
      href={new URL("/rss.xml", Astro.site)}
    />
  </head>

  <body
    class="flex min-h-dvh w-full flex-col overflow-x-hidden bg-neutral-950 px-4 text-neutral-100 antialiased"
  >
    <a
      href="#main"
      class="fixed left-0 top-0 -translate-y-full border-b border-r border-dashed border-neutral-800 p-2 text-sm font-medium focus:translate-y-0"
      >Skip to content</a
    >
    <div
      class="mx-auto flex w-full max-w-3xl flex-1 flex-col border-x border-neutral-700"
    >
      <nav class="border-b border-neutral-700">
        <div
          class="h-6 w-full border-b border-neutral-700 opacity-75 [background-image:linear-gradient(45deg,theme(colors.neutral.700)_12.50%,transparent_12.50%,transparent_50%,theme(colors.neutral.700)_50%,theme(colors.neutral.700)_62.50%,transparent_62.50%,transparent_100%)] [background-size:4px_4px]"
          aria-hidden="true"
        >
        </div>
        <div class="flex items-center justify-between p-4 sm:px-8">
          <ul class="flex gap-4">
            {
              NAVIGATION.map(({ slug, label }) => {
                const isCurrent =
                  Astro.url.pathname === `${slug}/` ||
                  Astro.url.pathname === `${slug}`;
                return (
                  <li>
                    <a
                      class="font-mono text-xs uppercase text-neutral-400 hover:text-white aria-[current]:text-white"
                      href={slug}
                      aria-current={isCurrent ? "page" : undefined}
                    >
                      {slug === "/" ? (
                        <Fragment>
                          <span aria-hidden="true">~/</span>&#8288;{label}
                        </Fragment>
                      ) : (
                        label
                      )}
                    </a>
                  </li>
                );
              })
            }
          </ul>

          <a
            class:list={[
              "rounded-full border border-green-300 bg-green-950 px-2 py-0.5 font-mono text-xxs text-green-300",
              "hover:bg-green-900",
            ]}
            href="https://github.com/alexcarpenter/alexcarpenter.me"
          >
            v{SITE_VERSION}
          </a>
        </div>
      </nav>
      <main class="flex flex-1 flex-col" id="main">
        <slot />
      </main>
      <footer class="border-t border-neutral-700 bg-neutral-900">
        <div class="p-4 py-8 sm:px-8">
          <ul class="flex justify-center gap-8">
            {
              SOCIALS.map(({ url, icon, label }) => (
                <li>
                  <a
                    class="flex w-max items-center gap-2 text-neutral-400 hover:text-white"
                    href={url}
                  >
                    <Icon name={icon} class="text-white" aria-hidden="true" />
                    <span class="font-mono text-xs uppercase">{label}</span>
                  </a>
                </li>
              ))
            }
          </ul>
          <p
            class="mt-8 flex items-center justify-center gap-2 font-mono text-xs uppercase text-neutral-400"
          >
            <span
              aria-hidden="true"
              class="size-2 flex-none rounded-full bg-green-500 before:absolute before:size-2 before:animate-ping before:rounded-full before:bg-green-300"
            ></span>
            All systems operational
          </p>
        </div>
      </footer>
    </div>
  </body>
</html>
