---
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "@/layouts/BaseLayout.astro";
type JobProps = CollectionEntry<"jobs">;
const jobs = await getCollection("jobs");
type RecommendationProps = CollectionEntry<"recommendations">;
const recommendations = await getCollection("recommendations");
import { parseYearToString } from "@/components/FormattedDate.astro";
import { slugify } from "@/utils/formatting";
import SectionLabel from "@/components/SectionLabel.astro";

const avatarMap = {
  "jimmy-merritello": import("@/images/jimmy-merritello.jpeg"),
  "amy-stuart": import("@/images/amy-stuart.jpeg"),
  "andrew-possehl": import("@/images/andrew-possehl.jpeg"),
  "danielle-dunn": import("@/images/danielle-dunn.jpeg"),
  "melissa-taylor": import("@/images/melissa-taylor.jpeg"),
  "kyle-luck": import("@/images/kyle-luck.jpeg"),
  "benjamin-kohl": import("@/images/benjamin-kohl.jpeg"),
};
---

<BaseLayout
  title="Resume"
  description="UI engineer who enjoys working at the intersection of design and engineering teams."
>
  <header class="relative px-4 py-12 text-center sm:px-8 sm:py-16">
    <SectionLabel as="p">Intro</SectionLabel>
    <h1 class="font-mono text-sm text-neutral-400">Resume</h1>
    <p class="mt-2 text-balance text-xl font-medium tracking-tight sm:text-2xl">
      User Interface Engineer who enjoys working at the intersection of design
      and engineering teams.
    </p>
    <!-- <a
      href=""
      class:list={[
        "group relative isolate inline-flex items-center justify-center overflow-hidden text-sm font-medium transition duration-300 ease-[cubic-bezier(0.4,0.36,0,1)] before:duration-300 before:ease-[cubic-bezier(0.4,0.36,0,1)] before:transtion-opacity rounded-md px-3 py-[0.1875rem] shadow-[0_1px_theme(colors.white/0.07)_inset,0_1px_3px_theme(colors.gray.900/0.2)] before:pointer-events-none before:absolute before:inset-0 before:-z-10 before:rounded-md before:bg-gradient-to-b before:from-white/20 before:opacity-50 hover:before:opacity-100 after:pointer-events-none after:absolute after:inset-0 after:-z-10 after:rounded-md after:bg-gradient-to-b after:from-white/10 after:from-[46%] after:to-[54%] after:mix-blend-overlay ring-1 bg-blue-600 text-white ring-blue-600",
      ]}>Download Resume</a
    > -->
  </header>

  <div
    class="h-6 w-full border-y border-neutral-700 opacity-75 [background-image:linear-gradient(45deg,theme(colors.neutral.700)_12.50%,transparent_12.50%,transparent_50%,theme(colors.neutral.700)_50%,theme(colors.neutral.700)_62.50%,transparent_62.50%,transparent_100%)] [background-size:4px_4px]"
    aria-hidden="true"
  >
  </div>

  <section id="experience" class="relative">
    <SectionLabel>Experience</SectionLabel>
    <ul class="divide-y divide-dashed divide-neutral-700">
      {
        jobs
          .sort(
            (a, b) =>
              Date.parse(b.data.startDate.toString()) -
              Date.parse(a.data.startDate.toString())
          )
          .map((job: JobProps) =>
            job.render().then(({ Content }) => (
              <li class="grid gap-4 px-4 py-8 sm:grid-cols-[2rem,minmax(0,1fr)] sm:px-8">
                <img
                  src={`/logos/${slugify(job.data.company)}.svg`}
                  alt=""
                  class="relative size-8"
                />
                <div>
                  <h3 class="font-medium sm:mt-1.5">
                    {job.data.title} at {job.data.company}
                  </h3>
                  <p class="mb-4 mt-0.5 font-mono text-sm text-neutral-400">
                    {`${parseYearToString(job.data.startDate)}â€“${
                      job.data.endDate
                        ? parseYearToString(job.data.endDate)
                        : "Now"
                    }`}
                  </p>
                  <div class="grid gap-x-8 gap-y-4 sm:grid-cols-[minmax(0,2fr),1px,minmax(0,1fr)]">
                    <div class="prose">
                      <Content />
                    </div>
                    <div
                      aria-hidden="true"
                      class="hidden h-full w-px border-r border-dashed border-neutral-700 [mask-image:linear-gradient(to_bottom,theme(colors.white)_calc(100%_-_2rem),transparent)] sm:block"
                    />
                    <ul>
                      {job.data.tools.map((t) => {
                        return (
                          <li class="inline">
                            <span class="tag">{t}</span>
                          </li>
                        );
                      })}
                    </ul>
                  </div>
                </div>
              </li>
            ))
          )
      }
    </ul>
  </section>

  <div
    class="h-6 w-full border-y border-neutral-700 opacity-75 [background-image:linear-gradient(45deg,theme(colors.neutral.700)_12.50%,transparent_12.50%,transparent_50%,theme(colors.neutral.700)_50%,theme(colors.neutral.700)_62.50%,transparent_62.50%,transparent_100%)] [background-size:4px_4px]"
    aria-hidden="true"
  >
  </div>

  <section id="recommendations" class="relative">
    <SectionLabel>Recommendations</SectionLabel>
    <ul class="divide-y divide-dashed divide-neutral-700">
      {
        recommendations
          .sort(
            (a, b) =>
              Date.parse(b.data.published.toString()) -
              Date.parse(a.data.published.toString())
          )
          .filter(
            (recommendation: RecommendationProps) =>
              recommendation.data.visible !== false
          )
          .map((recommendation: RecommendationProps) =>
            recommendation.render().then(({ Content }) => {
              const { name, title, company } = recommendation.data;
              return (
                <li class="grid gap-4 px-4 py-8 sm:grid-cols-[2rem,minmax(0,1fr)] sm:px-8">
                  <Image
                    src={avatarMap[recommendation.slug]}
                    alt="Jimmy Merrittello avatar"
                    class="relative size-8 rounded-full"
                    width={128}
                    height={128}
                  />
                  <div>
                    <h3 class="font-medium sm:mt-1">{name}</h3>
                    <p class="mb-4 mt-0.5 font-mono text-sm text-neutral-400">
                      {title} at {company}
                    </p>
                    <Content />
                  </div>
                </li>
              );
            })
          )
      }
    </ul>
  </section>
</BaseLayout>
