---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
type JobProps = CollectionEntry<"jobs">;
const jobs = await getCollection("jobs");
type RecommendationProps = CollectionEntry<"recommendations">;
const recommendations = await getCollection("recommendations");
import { parseYearToString } from "@/components/FormattedDate.astro";
import { slugify } from "@/utils/formatting";
---

<BaseLayout
  title="Resume"
  description="UI engineer who enjoys working at the intersection of design and engineering teams."
>
  <header
    class="relative text-center py-10 sm:py-16 px-4 sm:px-8 border-b border-neutral-700"
  >
    <h1 class="text-sm text-neutral-400 font-mono">Resume</h1>
    <p class="mt-2 font-medium text-xl sm:text-2xl text-balance tracking-tight">
      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Blanditiis,
      magnam!
    </p>
  </header>
  <!-- <header class="pb-8 pt-40">
    <h1 class="font-semibold">Resume&nbsp;&not;</h1>
    <p class="mt-0.5 text-secondary text-balance">
      User Interface Engineer who enjoys working at the intersection of design
      and engineering teams. Currently apart of the design team at Clerk.
    </p>
  </header>

  <section class="py-8 border-t border-primary" id="experience">
    <h2 class="font-semibold mb-8">Experience</h2>
    <ul class="-my-8 divide-y divide-primary divide-dashed">
      {
        jobs
          .sort(
            (a, b) =>
              Date.parse(b.data.startDate.toString()) -
              Date.parse(a.data.startDate.toString())
          )
          .map((job: JobProps) =>
            job.render().then(({ Content }) => (
              <li class="py-8 grid sm:grid-cols-3 gap-x-8 gap-y-4">
                <header class="sm:col-span-3">
                  <h3 class="font-semibold">
                    {job.data.title} at {job.data.company}
                  </h3>
                  <p class="mt-0.5 text-sm text-secondary">
                    {`${parseYearToString(job.data.startDate)}â€“${
                      job.data.endDate
                        ? parseYearToString(job.data.endDate)
                        : "Now"
                    }`}
                  </p>
                </header>
                <div class="sm:col-span-2 prose">
                  <Content />
                </div>
                <ul class="pl-6 sm:pl-4 marker:text-subtle list-square">
                  {job.data.tools.map((tool: any) => (
                    <li>{tool}</li>
                  ))}
                </ul>
              </li>
            ))
          )
      }
    </ul>
  </section>

  <section class="pt-8 pb-16 border-t border-primary" id="recommendations">
    <h2 class="font-semibold mb-8">Recommendations</h2>
    <ul class="-my-8 divide-y divide-primary divide-dashed">
      {
        recommendations
          .sort(
            (a, b) =>
              Date.parse(b.data.published.toString()) -
              Date.parse(a.data.published.toString())
          )
          .map((recommendation: RecommendationProps) =>
            recommendation.render().then(({ Content }) => {
              return (
                <li class="py-8">
                  <figure class="grid grid-cols-1 sm:grid-cols-3 gap-x-8 gap-y-4">
                    <blockquote class="col-span-2 sm:col-start-2">
                      <Content />
                    </blockquote>
                    <figcaption class="sm:col-start-1 sm:row-start-1">
                      <div class="flex mb-4">
                        {[
                          `/img/${slugify(recommendation.data.company)}.svg`,
                          `/img/${slugify(recommendation.data.name)}.jpeg`,
                        ].map((x, i) => {
                          return (
                            <img
                              src={x}
                              alt=""
                              class:list={[
                                "size-8 rounded-full ring-2 ring-white dark:ring-neutral-950",
                                {
                                  "-ml-1": i > 0,
                                },
                              ]}
                            />
                          );
                        })}
                      </div>
                      <p class="font-semibold">{recommendation.data.name}</p>
                      <p class="mt-0.5 text-secondary text-sm">
                        {recommendation.data.title}
                        <br class="hidden sm:block" />
                        {recommendation.data.company}
                      </p>
                    </figcaption>
                  </figure>
                </li>
              );
            })
          )
      }
    </ul>
  </section> -->
</BaseLayout>
