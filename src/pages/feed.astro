---
import Base from "@/layouts/BaseLayout.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import { type CollectionEntry } from "astro:content";
type Note = CollectionEntry<"notes">;
const notes = await Astro.glob(`../content/notes/*.md`);
const groupedNotes = notes.reduce(
  (groups, note) => {
    const date = note.frontmatter.published.split("T")[0];
    if (!groups[date]) {
      groups[date] = [];
    }
    groups[date].push(note);
    return groups;
  },
  {} as Record<string, Note[]>
);
---

<Base title="Feed" description="Short form updates">
  <header class="relative mb-6 border-b-2 pb-2 pr-12">
    <h1 class="font-semibold">Feed</h1>
    <p class="text-pretty text-secondary">Short form updates</p>
  </header>
  <main class="flex flex-1 flex-col">
    <div class="prose">
      <dl>
        {
          Object.entries(groupedNotes).map(([date, notes]) => {
            return (
              <>
                <dt>
                  <FormattedDate date={new Date(date)} />
                </dt>
                {notes.map(({ render }) => {
                  return (
                    <dd>
                      <div class="prose">
                        {render}
                        <time class="text-sm text-secondary block">
                          12:00pm
                        </time>
                      </div>
                    </dd>
                  );
                })}
              </>
            );
          })
        }
      </dl>
    </div>
  </main>
</Base>
