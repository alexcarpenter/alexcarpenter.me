---
import { Image } from "astro:assets";
import SectionLabel from "@/components/SectionLabel.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { slugify } from "@/utils/formatting";
import SignInCodeBlock from "@/components/SignInCodeBlock.astro";
import SignInCard from "@/components/SignInCard.astro";

import joeBellAvatar from "@/images/joe-bell.jpeg";
import bryceKalowAvatar from "@/images/bryce-kalow.jpeg";
import tomMilewskiAvatar from "@/images/tom-milewski.jpeg";
import dylanStaleyAvatar from "@/images/dylan-staley.jpeg";
---

<BaseLayout>
  <header class="relative text-center py-12 sm:py-16 px-4 sm:px-8">
    <SectionLabel as="p">Intro</SectionLabel>
    <h1 class="text-sm text-neutral-400 font-mono">Alex Carpenter</h1>
    <p class="mt-2 font-medium text-xl sm:text-2xl text-balance tracking-tight">
      User Interface Engineer who enjoys working at the intersection of design
      and engineering teams.
    </p>
  </header>

  <div
    class="w-full h-6 opacity-75 [background-image:linear-gradient(45deg,theme(colors.neutral.700)_12.50%,transparent_12.50%,transparent_50%,theme(colors.neutral.700)_50%,theme(colors.neutral.700)_62.50%,transparent_62.50%,transparent_100%)] [background-size:4px_4px] border-y border-neutral-700"
    aria-hidden="true"
  >
  </div>

  <section class="relative" id="currently">
    <SectionLabel>Currently</SectionLabel>
    <header class="px-4 py-8 sm:px-8">
      <p class="text-balance font-medium">
        Currently I am a part of the design team at <a
          href="https://clerk.com"
          class="underline decoration-2 decoration-neutral-600 hover:decoration-white"
          >Clerk</a
        > where I am working on <a
          href="https://clerk.com/docs/elements/overview"
          class="underline decoration-2 decoration-neutral-600 hover:decoration-white"
          >Elements</a
        > and rebuilding our <a
          href="https://clerk.com/docs/components/overview"
          class="underline decoration-2 decoration-neutral-600 hover:decoration-white"
          >UI Components</a
        >.
      </p>
    </header>

    <div
      class="border-y border-neutral-700 border-dashed grid grid-cols-1 sm:grid-cols-2 auto-rows-[20rem]"
    >
      <div
        class="relative sm:border-r border-dashed border-neutral-700 overflow-hidden"
      >
        <figure class="relative">
          <figcaption class="sr-only">
            Codeblock showing Clerk Elements sign in code example
          </figcaption>
          <div inert="">
            <SignInCodeBlock />
          </div>
        </figure>
        <span
          class="absolute bottom-0 inset-x-0 h-8 bg-gradient-to-t from-neutral-950 to-transparent"
          aria-hidden="true"></span>
      </div>

      <div class="max-sm:border-t border-dashed border-neutral-700">
        <div
          class="h-full relative overflow-hidden pt-8 px-4 sm:p-0 bg-neutral-900"
        >
          <div
            class="relative sm:absolute mx-auto max-w-96 sm:min-w-full sm:translate-x-10 sm:translate-y-10"
          >
            <div
              class:list={[
                "absolute h-px border-t border-dashed border-neutral-700 -top-0.5",
                "w-screen left-1/2 right-1/2 ml-[-50vw] mr-[-50vw]",
              ]}
              aria-hidden="true"
            >
            </div>
            <div
              class="absolute h-full w-px -top-10 -left-0.5 bottom-0 border-l border-dashed border-neutral-700 cursor-ew-resize"
              aria-hidden="true"
            >
            </div>
            <div
              class="absolute h-full w-px -top-10 -right-0.5 bottom-0 border-r border-dashed border-neutral-700"
              aria-hidden="true"
            >
            </div>

            <figure>
              <figcaption class="sr-only">Clerk sign in component</figcaption>
              <SignInCard />
            </figure>
          </div>
        </div>
      </div>
    </div>

    <div class="px-4 py-8 sm:px-8 text-center">
      <p class="text-xs font-mono uppercase text-neutral-400">
        In collaboration with
      </p>
      <div class="flex justify-center mt-4">
        {
          [
            {
              name: "Joe Bell",
              img: joeBellAvatar,
              linkedin: "https://www.linkedin.com/in/joebell93/",
            },
            {
              name: "Bryce Kalow",
              img: bryceKalowAvatar,
              linkedin: "https://www.linkedin.com/in/bryce-kalow-86a57183/",
            },
            {
              name: "Tom Milewski",
              img: tomMilewskiAvatar,
              linkedin: "https://www.linkedin.com/in/tmilewski/",
            },
            {
              name: "Dylan Staley",
              img: dylanStaleyAvatar,
              linkedin: "https://www.linkedin.com/in/dstaley/",
            },
          ].map(({ name, img, linkedin }) => {
            const id = slugify(`tooltip-${name}`);
            return (
              <Fragment>
                <a
                  href={linkedin}
                  data-tooltip-trigger={id}
                  class="relative size-8 rounded-full -ml-0.5 ring-4 ring-neutral-950 grayscale hover:grayscale-0 overflow-hidden"
                  aria-describedby={id}
                >
                  <Image
                    src={img}
                    alt={`${name} avatar`}
                    width={128}
                    height={128}
                    class="w-full h-full absolute object-cover"
                  />
                </a>
                <div
                  id={id}
                  role="tooltip"
                  class="bg-neutral-800 px-2 py-1 rounded-md text-xs font-mono w-max absolute top-0 left-0 hidden"
                >
                  {name}
                </div>
              </Fragment>
            );
          })
        }
      </div>
    </div>
  </section>

  <div
    class="w-full h-6 opacity-75 [background-image:linear-gradient(45deg,theme(colors.neutral.700)_12.50%,transparent_12.50%,transparent_50%,theme(colors.neutral.700)_50%,theme(colors.neutral.700)_62.50%,transparent_62.50%,transparent_100%)] [background-size:4px_4px] border-y border-neutral-700"
    aria-hidden="true"
  >
  </div>

  <div class="flex-1 relative">
    <div
      class="hidden sm:block absolute inset-y-0 left-1/2 border-r border-neutral-700 border-dashed"
      aria-hidden="true"
    >
    </div>
    <section class="relative px-4 py-8 sm:px-8" id="currently">
      <SectionLabel>Interests</SectionLabel>
      <div class="grid grid-cols-1 sm:grid-cols-2 gap-y-8 gap-x-16">
        <div class="prose">
          <p>
            With over a decade of experience as a UI engineer, I've had the
            privilege of collaborating across engineering, design, and marketing
            teams. My passion lies in working with product and marketing teams,
            where I can leverage my technical expertise to create impactful user
            experiences and drive business goals.
          </p>
        </div>
        <div class="flex items-center">
          <div>
            <p class="mb-4 text-xs font-mono uppercase text-neutral-400">
              Skills and interests
            </p>
            <ul>
              {
                [
                  "Next.js",
                  "Tailwind CSS",
                  "Framer Motion",
                  "Astro",
                  "Accessibility",
                  "Mentorship",
                  "CSS Architecture",
                  "Component API Design",
                ].map((i) => {
                  return (
                    <li class="inline">
                      <span class="tag leading-relaxed">{i}</span>
                    </li>
                  );
                })
              }
            </ul>
          </div>
        </div>
      </div>
    </section>
  </div>
</BaseLayout>

<script>
  import { computePosition, flip, shift, offset } from "@floating-ui/dom";

  const triggers = document.querySelectorAll(
    "[data-tooltip-trigger]"
  ) as NodeListOf<HTMLElement>;

  triggers.forEach((trigger) => {
    const content = document.getElementById(
      `${trigger.dataset.tooltipTrigger}`
    ) as HTMLElement;
    function update() {
      computePosition(trigger, content, {
        placement: "top",
        middleware: [
          offset(8),
          flip(),
          shift({
            padding: 16,
          }),
        ],
      }).then(({ x, y }) => {
        Object.assign(content.style, {
          left: `${x}px`,
          top: `${y}px`,
        });
      });
    }

    function show() {
      content.style.display = "block";
      update();
    }

    function hide() {
      content.style.display = "";
    }

    [
      ["mouseenter", show],
      ["mouseleave", hide],
      ["focus", show],
      ["blur", hide],
      [
        "keydown",
        (e: KeyboardEvent) => {
          if (e.key === "Escape") {
            hide();
          }
        },
      ],
    ].forEach(([event, listener]) => {
      trigger.addEventListener(
        event as keyof HTMLElementEventMap,
        listener as EventListenerOrEventListenerObject
      );
    });
  });
</script>
