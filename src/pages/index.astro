---
import { getCollection, render } from "astro:content";
import { Icon } from "astro-icon/components";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { Image } from "astro:assets";
const jobs = await getCollection("jobs");
const recommendations = await getCollection("recommendations");
---

<BaseLayout>
  <header class="mt-4 container">
    <span
      class="block text-2xl font-medium tracking-tight max-w-[40ch] leading-tight"
    >
      <h1 class="inline">User interface engineer</h1>
      <span class="text-foreground-muted">
        who enjoys working at the intersection of <Icon
          name="figma-full-color"
          class="inline h-[1.15em] align-text-bottom"
          aria-hidden="true"
        /> design and
        <Icon
          name="github"
          class="inline h-[1.15em] align-text-bottom text-foreground"
          aria-hidden="true"
        /> engineering teams.
      </span>
    </span>
    <p class="mt-4 text-foreground-muted font-medium max-w-[55ch] text-pretty">
      Currently I am a part of the SDK team at Clerk where I am working on our
      UI Components and Dashboard UI.
    </p>
    <a
      href="/notes"
      class="bg-white dark:bg-neutral-900 border border-separator py-1.5 pl-3 pr-2 rounded-md mt-6 inline-flex text-sm font-medium items-center gap-x-1"
      >View notes <Icon
        name="chevron-right"
        class="text-foreground-muted size-4 translate-y-px"
        aria-hidden="true"
      /></a
    >
  </header>

  <section class="mt-16 container">
    <h2 class="text-purple-600 dark:text-purple-400 font-medium tracking-tight">
      Experience
    </h2>

    <ul>
      {
        jobs
          .sort(
            (a, b) =>
              Date.parse(b.data.startDate.toString()) -
              Date.parse(a.data.startDate.toString())
          )
          .map((j) =>
            render(j).then(({ Content }) => {
              return (
                <li class="border-t border-separator pt-8 mt-8 rounded-sm">
                  <article>
                    <h2 class="font-medium">{j.data.company}</h2>
                    <div class="flex flex-wrap gap-x-4 justify-between">
                      <p class="text-foreground-muted font-medium">
                        {j.data.title}
                      </p>
                      <p class="text-foreground-muted font-medium">
                        <time datetime={j.data.startDate.toISOString()}>
                          {new Date(j.data.startDate).toLocaleDateString(
                            "en-US",
                            {
                              year: "numeric",
                              month: "short",
                            }
                          )}
                        </time>{" "}
                        -
                        {j.data.endDate ? (
                          <time datetime={j.data.endDate.toISOString()}>
                            {new Date(j.data.endDate).toLocaleDateString(
                              "en-US",
                              {
                                year: "numeric",
                                month: "short",
                              }
                            )}
                          </time>
                        ) : (
                          <time datetime={new Date().toISOString()}>
                            Present
                          </time>
                        )}
                      </p>
                    </div>
                    <div class="mt-4 text-pretty prose">
                      <Content />
                      <ul>
                        {j.data.projects?.map((p) => {
                          return (
                            <li>
                              <a
                                href={p.href}
                                target="_blank"
                                rel="noopener noreferrer"
                                class="relative"
                              >
                                {p.title}
                              </a>
                            </li>
                          );
                        })}
                      </ul>
                    </div>
                    <p class="mt-4 text-foreground-muted">
                      {new Intl.ListFormat("en-US", {
                        style: "long",
                        type: "conjunction",
                      }).format(j.data.tools)}
                    </p>
                  </article>
                </li>
              );
            })
          )
      }
    </ul>
  </section>

  <!-- <section class="mt-16 container">
    <h2 class="text-red-600 dark:text-red-400 font-medium tracking-tight">
      Interests &amp; Skills
    </h2>
    <ul class="grid grid-cols-2 gap-x-8">
      {
        [
          {
            iconName: "tailwind-css",
            heading: "CSS Architecture",
            description:
              "I am interested in the intersection of design and engineering. I enjoy working on design systems, component libraries, and developer experience.",
          },
          {
            iconName: "figma",
            heading: "Design Systems",
            description:
              "I am interested in the intersection of design and engineering. I enjoy working on design systems, component libraries, and developer experience.",
          },
          {
            iconName: "components",
            heading: "Component Libraries",
            description:
              "I am interested in the intersection of design and engineering. I enjoy working on design systems, component libraries, and developer experience.",
          },
          {
            iconName: "github",
            heading: "Developer Experience",
            description:
              "I am interested in the intersection of design and engineering. I enjoy working on design systems, component libraries, and developer experience.",
          },
        ].map((i) => {
          return (
            <li class="border-t border-separator pt-8 mt-8">
              <header class="flex gap-2 items-center">
                <Icon name={i.iconName} class="size-4" />
                <h3 class="font-medium tracking-tight">{i.heading}</h3>
              </header>
              <p class="text-foreground-muted mt-4">
                Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                Reprehenderit, illum.
              </p>
            </li>
          );
        })
      }
    </ul>
  </section> -->

  <section class="mt-16 container">
    <h2 class="text-green-600 dark:text-green-400 font-medium tracking-tight">
      Recommendations
    </h2>

    <ul>
      {
        recommendations
          .sort(
            (a, b) =>
              Date.parse(b.data.published.toString()) -
              Date.parse(a.data.published.toString())
          )
          .filter((recommendation) => recommendation.data.status === "visible")
          .map((recommendation) =>
            render(recommendation).then(({ Content }) => {
              return (
                <li class="border-t border-separator pt-8 mt-8 rounded-sm">
                  <article>
                    <div class="text-pretty prose">
                      <Content />
                    </div>
                    <div class="mt-4">
                      <div class="flex gap-x-1">
                        {Array.from({ length: 5 }, () => (
                          <Icon
                            name="star"
                            class="text-amber-500 dark:text-amber-400 size-4"
                          />
                        ))}
                      </div>
                      <p class="mt-2 font-medium">{recommendation.data.name}</p>
                      <p class="font-medium text-foreground-muted">
                        {recommendation.data.title},{" "}
                        {recommendation.data.company}
                      </p>
                    </div>
                  </article>
                </li>
              );
            })
          )
      }
    </ul>
  </section>
</BaseLayout>
