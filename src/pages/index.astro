---
import { getCollection, render } from "astro:content";
import { Icon } from "astro-icon/components";
import BaseLayout from "@/layouts/BaseLayout.astro";
import ExternalLink from "@/components/ExternalLink.astro";
import Button from "@/components/Button.astro";

const jobs = await getCollection("jobs");
const recommendations = await getCollection("recommendations");

const renderedJobs = await Promise.all(
  jobs.map(async (job) => {
    const { Content } = await render(job);
    return { job, Content };
  }),
);
const renderedRecommendations = await Promise.all(
  recommendations.map(async (recommendation) => {
    const { Content } = await render(recommendation);
    return { recommendation, Content };
  }),
);
---

<BaseLayout>
  <header class="mt-4 container">
    <span
      class="block text-2xl font-medium tracking-tight max-w-[40ch] leading-tight"
    >
      <h1 class="inline">User interface engineer</h1>
      <span class="text-muted-foreground">
        who enjoys working at the intersection of <Icon
          name="figma-full-color"
          class="inline h-[1.15em] align-text-bottom"
          aria-hidden="true"
        /> design and
        <Icon
          name="github"
          class="inline h-[1.15em] align-text-bottom text-foreground"
          aria-hidden="true"
        /> engineering teams.
      </span>
    </span>
    <p class="mt-4 text-muted-foreground font-medium max-w-[55ch] text-pretty">
      Currently I am a part of the SDK team at Clerk where I am working on our
      UI Components and dashboard UI.
    </p>
    <p class="mt-4 text-muted-foreground font-medium max-w-[55ch] text-pretty">
      In my free time, I am working on a resource around building <a
        href="https://www.resilient-ui.com"
        class="underline decoration-[0.09375rem] decoration-underline"
        target="_blank"
        rel="noopener">resilient UI's</a
      > and curating a collection of <a
        href="https://ibrewmyown.coffee/"
        class="underline decoration-[0.09375rem] decoration-underline"
        target="_blank"
        rel="noopener">home coffee setups</a
      >.
    </p>
    <Button as="a" href="/notes" class="mt-8"
      >View notes
      <Icon name="chevron-right" aria-hidden="true" data-slot="end" />
    </Button>
  </header>

  <section class="mt-16 container">
    <h2
      class="text-purple-600 dark:text-purple-400 font-medium tracking-tight"
      id="experience"
    >
      Experience
    </h2>

    <ul>
      {
        renderedJobs
          .sort(
            (a, b) =>
              Date.parse(b.job.data.startDate.toString()) -
              Date.parse(a.job.data.startDate.toString()),
          )
          .map(({ job, Content }) => (
            <li class="border-t border-separator pt-8 mt-8 rounded-sm">
              <article>
                <h2 class="font-medium">{job.data.company}</h2>
                <div class="flex flex-wrap gap-x-4 justify-between">
                  <p class="text-muted-foreground font-medium">
                    {job.data.title}
                  </p>
                  <p class="text-muted-foreground font-medium">
                    <time datetime={job.data.startDate.toISOString()}>
                      {new Date(job.data.startDate).toLocaleDateString(
                        "en-US",
                        {
                          year: "numeric",
                          month: "short",
                        },
                      )}
                    </time>{" "}
                    -
                    {job.data.endDate ? (
                      <time datetime={job.data.endDate.toISOString()}>
                        {new Date(job.data.endDate).toLocaleDateString(
                          "en-US",
                          {
                            year: "numeric",
                            month: "short",
                          },
                        )}
                      </time>
                    ) : (
                      <time datetime={new Date().toISOString()}>Present</time>
                    )}
                  </p>
                </div>
                <div class="mt-4 text-pretty prose">
                  <Content />
                  <ul>
                    {job.data.projects?.map((project) => {
                      return (
                        <li>
                          <ExternalLink
                            href={project.link}
                            text={project.title}
                          />
                        </li>
                      );
                    })}
                  </ul>
                </div>
                <p class="mt-4 text-muted-foreground">
                  {new Intl.ListFormat("en-US", {
                    style: "long",
                    type: "conjunction",
                  }).format(job.data.tools)}
                </p>
              </article>
            </li>
          ))
      }
    </ul>
  </section>

  <section class="mt-16 container">
    <h2
      class="text-red-600 dark:text-red-400 font-medium tracking-tight"
      id="interests-and-skills"
    >
      Interests &amp; Skills
    </h2>
    <ul class="grid grid-cols-1 sm:grid-cols-2 gap-x-8">
      {
        [
          {
            iconName: "tailwind-css",
            title: "CSS Architecture",
            description:
              "I enjoy creating scalable and maintainable CSS architectures that improve performance and readability of web applications.",
          },
          {
            iconName: "figma",
            title: "Design Systems",
            description:
              "I love building cohesive design systems that ensure consistency and efficiency between design and development.",
          },
          {
            iconName: "components",
            title: "Component Libraries",
            description:
              "I take pride in crafting reusable and accessible component libraries to streamline development and enhance user experience.",
          },
          {
            iconName: "github",
            title: "Developer Experience",
            description:
              "I focus on optimizing developer workflows and tools to boost productivity and collaboration within engineering teams.",
          },
        ].map((item) => {
          return (
            <li class="border-t border-separator pt-8 mt-8">
              <header class="flex gap-2">
                <span class="h-[1lh] flex items-center">
                  <Icon name={item.iconName} class="size-[1em] flex-none" />
                </span>
                <h3 class="font-medium tracking-tight">{item.title}</h3>
              </header>
              <p class="text-muted-foreground mt-4">{item.description}</p>
            </li>
          );
        })
      }
    </ul>
  </section>

  <section class="mt-16 container">
    <h2
      class="text-green-600 dark:text-green-400 font-medium tracking-tight"
      id="recommendations"
    >
      Recommendations
    </h2>

    <ul>
      {
        renderedRecommendations
          .sort(
            (a, b) =>
              Date.parse(b.recommendation.data.published.toString()) -
              Date.parse(a.recommendation.data.published.toString()),
          )
          .filter(
            ({ recommendation }) => recommendation.data.status === "visible",
          )
          .map(({ recommendation, Content }) => (
            <li class="border-t border-separator pt-8 mt-8 rounded-sm">
              <article>
                <div class="text-pretty prose">
                  <Content />
                </div>
                <div class="mt-4">
                  <div class="flex gap-x-1">
                    {Array.from({ length: 5 }, () => (
                      <Icon
                        name="star"
                        class="text-amber-500 dark:text-amber-400 size-4"
                      />
                    ))}
                  </div>
                  <p class="mt-2 font-medium">{recommendation.data.name}</p>
                  <p class="font-medium text-muted-foreground">
                    {recommendation.data.title}, {recommendation.data.company}
                  </p>
                </div>
              </article>
            </li>
          ))
      }
    </ul>
  </section>
</BaseLayout>
