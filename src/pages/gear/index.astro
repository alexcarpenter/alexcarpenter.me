---
import ExternalLink from "@/components/ExternalLink.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

const gear = await getCollection("gear");
import { GEAR_CATEGORY_MAP } from "@/consts.ts";
---

<BaseLayout
  title="Gear"
  description="Gear I use for computing, travel, and more."
>
  <header class="mt-4 container">
    <span
      class="block text-2xl font-medium tracking-tight max-w-[40ch] leading-tight"
    >
      <h1 class="inline">Gear</h1>
      <span class="text-foreground-muted"
        >I use for computing, travel, and more.</span
      >
    </span>
  </header>
  {
    Object.keys(GEAR_CATEGORY_MAP).map((category) => {
      const items = gear.filter((item) => item.data.category === category);
      return items.length > 0 ? (
        <section class="mt-16 container scroll-mt-16" id={category}>
          <header class="border-b border-separator pb-8 mb-8">
            <h2 class="text-green-600 dark:text-green-400 font-medium tracking-tight">
              <a href={`/gear/${category}`}>
                {GEAR_CATEGORY_MAP[category].title}
              </a>
            </h2>
            <p class="text-foreground-muted">
              {GEAR_CATEGORY_MAP[category].description}
            </p>
          </header>

          <ul class="grid grid-cols-1 sm:grid-cols-2 gap-8">
            {items.map((item) => {
              return (
                <li>
                  <article>
                    <p class="mb-1 font-mono text-xs tracking-widest uppercase text-foreground-muted flex gap-x-1">
                      {item.data.favorite ? (
                        <span class="flex items-center h-[1lh]">
                          <Icon
                            name="star"
                            class="text-amber-500 dark:text-amber-400 size-[1em]"
                            title="Favorite"
                          />
                        </span>
                      ) : null}
                      {item.data.eyebrow}
                    </p>
                    <h3 class="font-medium tracking-tight">
                      {item.data.link ? (
                        <ExternalLink
                          href={item.data.link}
                          class="text-foreground-muted hover:text-foreground transition"
                          text={item.data.name}
                        />
                      ) : (
                        item.data.name
                      )}
                    </h3>
                    {item.data.link ? (
                      <p class="text-foreground-muted">
                        {new URL(item.data.link).hostname}
                      </p>
                    ) : null}
                  </article>
                </li>
              );
            })}
          </ul>
        </section>
      ) : null;
    })
  }
</BaseLayout>
