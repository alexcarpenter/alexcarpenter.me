---
import ExternalLink from "@/components/ExternalLink.astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { Icon } from "astro-icon/components";

const gear = await getCollection("gear");
import { GEAR_CATEGORY_MAP } from "@/consts.ts";
---

<BaseLayout
  title="Gear"
  description="Gear I use for computing, travel, and more."
>
  <header class="container mt-4">
    <span
      class="block max-w-[40ch] text-2xl leading-tight font-medium tracking-tight"
    >
      <h1 class="inline">Gear</h1>
      <span class="text-muted-foreground"
        >I use for computing, travel, and more.</span
      >
    </span>
  </header>
  {
    Object.keys(GEAR_CATEGORY_MAP).map((category) => {
      const { title, description, slug } = GEAR_CATEGORY_MAP[category];
      const items = gear
        .filter((item) => item.data.category === category)
        .sort((a, b) => {
          return a.data.name.localeCompare(b.data.name);
        });
      return items.length > 0 ? (
        <section class="container mt-16">
          <header class="border-separator mb-8 border-b pb-8">
            <h2
              class="scroll-mt-16 font-medium tracking-tight text-green-600 dark:text-green-400"
              id={category}
            >
              <a href={`/gear/${slug}`}>{title}</a>
            </h2>
            <p class="text-muted-foreground">{description}</p>
          </header>

          <ul class="grid grid-cols-1 gap-8 sm:grid-cols-2">
            {items.map((item) => {
              return (
                <li>
                  <article>
                    <p class="text-muted-foreground mb-1 flex gap-x-[1ch] font-mono text-xs tracking-widest uppercase">
                      {item.data.favorite ? (
                        <span class="flex h-[1lh] items-center">
                          <Icon
                            name="star"
                            class="size-[1em] text-amber-500 dark:text-amber-400"
                            title="Favorite"
                          />
                        </span>
                      ) : null}
                      {item.data.eyebrow}
                    </p>
                    <h3 class="font-medium tracking-tight">
                      {item.data.link ? (
                        <ExternalLink
                          href={item.data.link}
                          class="text-muted-foreground hover:text-foreground transition"
                          text={item.data.name}
                        />
                      ) : (
                        item.data.name
                      )}
                    </h3>
                    {item.data.link ? (
                      <p class="text-muted-foreground">
                        {new URL(item.data.link).hostname.replace("www.", "")}
                      </p>
                    ) : null}
                  </article>
                </li>
              );
            })}
          </ul>
        </section>
      ) : null;
    })
  }

  <section class="container mt-16">
    <div
      class="text-muted-foreground rounded-md bg-white p-4 text-sm dark:bg-neutral-900"
    >
      <p>
        Note this page makes use of affiliate links. If you choose to purchase
        something through one of these links, I may receive a small commission
        at no extra cost to you. Affiliate links are clearly marked with <mark
          class="text-foreground bg-transparent">amzn.to</mark
        >
        under the product name.
      </p>
    </div>
  </section>
</BaseLayout>
