---
import { type CollectionEntry, getCollection, getEntry } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import SectionBreak from "@/components/SectionBreak.astro";
import SectionLabel from "@/components/SectionLabel.astro";
import CollectionRoot from "@/components/Collection/Root.astro";
import CollectionItem from "@/components/Collection/Item.astro";
import Header from "@/components/Header.astro";
import FormattedDate from "@/components/FormattedDate.astro";

export async function getStaticPaths() {
  const collections = await getCollection("collections");
  return collections.map((collection) => ({
    params: { slug: collection.id },
    props: collection,
  }));
}

type Props = CollectionEntry<"collections">;
const collection = Astro.props;
---

<BaseLayout
  title={collection.data.title}
  description={collection.data.description}
>
  <Header>
    <SectionLabel as="p">Intro</SectionLabel>
    <h1 class="font-mono text-sm text-neutral-400">{collection.data.title}</h1>
    <p class="mt-2 text-xl font-medium tracking-tight text-balance sm:text-2xl">
      {collection.data.description}
    </p>
    {
      collection.data.changelog ? (
        <p class="font-mono text-sm text-neutral-400 mt-2">
          Last updated{" "}
          <FormattedDate date={collection.data.changelog.at(0).published} />
        </p>
      ) : null
    }
  </Header>

  <SectionBreak />

  <section class="relative flex-1">
    <SectionLabel as="h2">Items</SectionLabel>

    <CollectionRoot>
      {
        collection.data.items.map(async ({ id }) => {
          const item = await getEntry("items", id);
          return (
            <CollectionItem>
              <p class="mb-1 font-mono text-xs text-orange-300 uppercase">
                {item.data.eyebrow}
              </p>
              <h3 class="font-semibold tracking-tight">
                {item.data.link ? (
                  <a
                    href={item.data.link}
                    class:list={[
                      "group underline decoration-neutral-600 decoration-2 hover:decoration-white",
                      "before:absolute before:inset-0",
                    ]}
                  >
                    {item.data.title}
                    <span
                      class="absolute mt-px ml-1 shrink-0 rounded-xs bg-neutral-800 p-0.5 text-neutral-400 group-hover:text-current"
                      aria-hidden="true"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="size-2.5"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      >
                        <line x1="7" y1="17" x2="17" y2="7" />
                        <polyline points="7 7 17 7 17 17" />
                      </svg>
                    </span>
                  </a>
                ) : (
                  item.data.title
                )}
              </h3>
            </CollectionItem>
          );
        })
      }
    </CollectionRoot>
  </section>

  {
    collection.data.changelog ? (
      <>
        <SectionBreak />

        <section class="relative [--section-label-opacity:0] has-[details[open]]:[--section-label-opacity:1] has-[details[open]]:min-h-[12rem]">
          <SectionLabel as="h2" class="opacity-[var(--section-label-opacity)]">
            Changelog
          </SectionLabel>
          <details class="px-4 py-4 sm:px-8">
            <summary class="text-center cursor-default">View changelog</summary>
            <div class="prose mt-4">
              <ul>
                {collection.data.changelog.map((item) => {
                  return (
                    <li>
                      <FormattedDate date={item.published} /> -{" "}
                      {item.description}
                    </li>
                  );
                })}
              </ul>
            </div>
          </details>
        </section>
      </>
    ) : null
  }
</BaseLayout>
