---
import type { GetStaticPaths } from "astro";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection, render } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
// import Button from "@/components/Button.astro";
import SectionBreak from "@/components/SectionBreak.astro";
import SectionLabel from "@/components/SectionLabel.astro";
import Header from "@/components/Header.astro";
import { RSS_FEEDS } from "@/consts";

export const getStaticPaths = (async ({ paginate }) => {
  const allLinks = await getCollection("links");
  const allNotes = await getCollection("notes", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  const allPosts = await getCollection("posts", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });
  const allFeed = [...allLinks, ...allNotes, ...allPosts].sort((a, b) => {
    const aDate = a.data.published;
    const bDate = b.data.published;
    return Date.parse(bDate.toString()) - Date.parse(aDate.toString());
  });
  return paginate(allFeed, { pageSize: 30 });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<BaseLayout
  title={page.currentPage > 1 ? `Feed - Page ${page.currentPage}` : "Feed"}
  description="UI engineer who enjoys working at the intersection of design and engineering teams."
>
  <Header>
    <SectionLabel as="p">Intro</SectionLabel>
    <h1 class="font-mono text-sm text-neutral-400">Feed</h1>
    <p class="mt-2 text-xl font-medium tracking-tight text-balance sm:text-2xl">
      A collection of short notes, interesting links, and the occasional long
      form post.
    </p>
    <div
      class="mt-4 flex justify-center gap-x-2 text-neutral-400 font-mono text-xs uppercase"
    >
      <p>RSS feeds:</p>
      <ul class="flex gap-x-[inherit]">
        {
          RSS_FEEDS.map(({ url, label }) => (
            <li>
              <a class="hover:text-white underline" href={url}>
                {label}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
    <!-- <Button as="a" href="/notes/rss.xml" class="mt-6">Subscribe via RSS</Button> -->
  </Header>

  <SectionBreak />

  <section class="relative">
    <SectionLabel as="h2">Items</SectionLabel>
    <ul class="divide-y divide-dashed divide-neutral-700">
      {
        page.data.map((item) => {
          if (item.collection === "links") {
            return render(item).then(({ Content }) => (
              <li class="px-4 py-8 sm:px-8" id={`link-${item.id}`}>
                <h2 class="font-semibold">
                  <a
                    href={item.data.link}
                    class="group underline decoration-neutral-600 decoration-2 hover:decoration-white"
                  >
                    {item.data.title}
                    <span
                      class="absolute mt-px ml-1 shrink-0 rounded-xs bg-neutral-800 p-0.5 text-neutral-400 group-hover:text-current"
                      aria-hidden="true"
                    >
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="size-2.5"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                      >
                        <line x1="7" y1="17" x2="17" y2="7" />
                        <polyline points="7 7 17 7 17 17" />
                      </svg>
                    </span>
                  </a>
                </h2>
                <p class="font-mono text-sm text-neutral-400">
                  {new URL(item.data.link).hostname}
                </p>
                {item.body && (
                  <div class="prose mt-4">
                    <Content />
                  </div>
                )}
              </li>
            ));
          } else if (item.collection === "posts") {
            return (
              <li class="px-4 py-8 sm:px-8" id={`post-${item.id}`}>
                <dl class="mb-2 flex items-center gap-4">
                  <dt class="sr-only">Published</dt>
                  <dd class="font-mono text-sm text-neutral-400">
                    <FormattedDate date={item.data.published} />
                  </dd>
                </dl>
                <h2 class="text-xl font-semibold tracking-tight">
                  <a
                    href={`/posts/${item.id}`}
                    class="group underline decoration-neutral-600 decoration-2 hover:decoration-white"
                  >
                    {item.data.title}
                  </a>
                </h2>
                <p class="mt-2">{item.data.description}</p>
              </li>
            );
          } else {
            return render(item).then(({ Content }) => (
              <li class="px-4 py-8 sm:px-8" id={`note-${item.id}`}>
                <dl class="mb-4 flex items-center gap-4">
                  <dt class="sr-only">Published</dt>
                  <dd class="font-mono text-sm text-neutral-400">
                    <FormattedDate date={item.data.published} type="datetime" />
                  </dd>
                </dl>
                {item.body && (
                  <div class="prose">
                    <Content />
                  </div>
                )}
              </li>
            ));
          }
        })
      }
    </ul>
    <nav class="border-t border-neutral-700 px-4 py-8 sm:px-8">
      <ul
        class="grid grid-cols-3 font-mono text-xs font-medium text-neutral-400 uppercase"
      >
        <li class="text-left">
          {
            page.currentPage > 1 ? (
              <a href={page.url.prev}>Previous page</a>
            ) : (
              <span class="text-neutral-600">Previous page</span>
            )
          }
        </li>
        <li class="text-center">
          <span>Page {page.currentPage} of {page.lastPage}</span>
        </li>
        <li class="text-right">
          {
            page.currentPage < page.lastPage ? (
              <a href={page.url.next}>Next page</a>
            ) : (
              <span class="text-neutral-600">Next page</span>
            )
          }
        </li>
      </ul>
    </nav>
  </section>
</BaseLayout>
