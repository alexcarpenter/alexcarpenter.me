---
import { getCollection, render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { undefined } from "astro:schema";
import { Icon } from "astro-icon/components";

const notes = await getCollection("notes");
---

<BaseLayout title="Notes">
  <header class="mt-16 container">
    <span
      class="block text-2xl font-medium tracking-tight max-w-[40ch] leading-tight"
      ><h1 class="inline">Notes</h1>
      <span class="text-foreground-muted"
        >on engineering, developer experience, design systems, and
        accessibility.</span
      ></span
    >
  </header>

  <section class="mt-16 container">
    <ul>
      {
        notes
          .sort(
            (a, b) =>
              Date.parse(b.data.published.toString()) -
              Date.parse(a.data.published.toString())
          )
          .map((n) =>
            render(n).then(({ Content }) => {
              return (
                <li class="border-t border-separator pt-8 not-first:mt-8 rounded-sm">
                  <article>
                    <a
                      href={`/notes/${n.id}`}
                      class="text-foreground-muted inline-block font-medium"
                    >
                      <time datetime={n.data.published.toISOString()}>
                        {new Date(n.data.published).toLocaleDateString(
                          "en-US",
                          {
                            year: "numeric",
                            month: "short",
                            day: "2-digit",
                            weekday: "short",
                          }
                        )}
                      </time>
                    </a>
                    {n.data.link ? (
                      <header class="mt-4">
                        <h2 class="font-medium">
                          <a
                            href={n.data.link.url}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="relative pr-5"
                          >
                            {n.data.link.title}
                            <Icon
                              name="square-arrow-out-up-right"
                              class="absolute right-0 text-foreground-muted top-0.5"
                              aria-hidden="true"
                            />
                          </a>
                        </h2>
                        <p class="text-foreground-muted">
                          {new URL(n.data.link.url).hostname}
                        </p>
                      </header>
                    ) : null}
                    {n.body ? (
                      <div class="mt-4 text-pretty prose">
                        <Content />
                      </div>
                    ) : null}
                  </article>
                </li>
              );
            })
          )
      }
    </ul>
  </section>
</BaseLayout>
