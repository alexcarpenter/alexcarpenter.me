---
import { getCollection, render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { Icon } from "astro-icon/components";
import ExternalLink from "@/components/ExternalLink.astro";

const notes = await getCollection("notes");
---

<BaseLayout title="Notes">
  <header class="mt-4 container">
    <span
      class="block text-2xl font-medium tracking-tight max-w-[40ch] leading-tight"
      ><h1 class="inline">Notes</h1>
      <span class="text-foreground-muted"
        >on engineering, developer experience, design systems, and
        accessibility.</span
      ></span
    >
    <a
      href="/tags"
      class="bg-white dark:bg-neutral-900 border border-separator py-1.5 pl-3 pr-2 rounded-md mt-6 inline-flex text-sm font-medium items-center gap-x-1"
      >View tags <Icon
        name="chevron-right"
        class="text-foreground-muted size-4 translate-y-px"
        aria-hidden="true"
      /></a
    >
  </header>

  <section class="mt-16 container">
    <ul>
      {
        notes
          .sort(
            (a, b) =>
              Date.parse(b.data.published.toString()) -
              Date.parse(a.data.published.toString())
          )
          .map((note) =>
            render(note).then(({ Content }) => {
              return (
                <li class="border-t border-separator pt-16 not-first:mt-16 rounded-sm">
                  <article>
                    <a
                      href={`/notes/${note.id}`}
                      class="text-foreground-muted inline-block font-medium"
                    >
                      <time datetime={note.data.published.toISOString()}>
                        {new Date(note.data.published).toLocaleDateString(
                          "en-US",
                          {
                            year: "numeric",
                            month: "short",
                            day: "2-digit",
                            weekday: "short",
                          }
                        )}
                      </time>
                    </a>
                    {note.data.title ? (
                      <header class="mt-4">
                        <h1 class="font-medium">
                          {note.data.link ? (
                            <ExternalLink
                              href={note.data.link}
                              text={note.data.title}
                            />
                          ) : (
                            note.data.title
                          )}
                        </h1>
                        {note.data.link ? (
                          <p class="text-foreground-muted">
                            {new URL(note.data.link).hostname}
                          </p>
                        ) : null}
                      </header>
                    ) : null}
                    {note.body ? (
                      <div class="mt-4 text-pretty prose">
                        <Content />
                      </div>
                    ) : note.data.description ? (
                      <div class="mt-4 text-pretty prose">
                        <blockquote>{note.data.description}</blockquote>
                      </div>
                    ) : null}
                  </article>
                </li>
              );
            })
          )
      }
    </ul>
  </section>
</BaseLayout>
