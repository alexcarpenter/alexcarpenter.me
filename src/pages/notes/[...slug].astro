---
import { getCollection, render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { Icon } from "astro-icon/components";
import ExternalLink from "@/components/ExternalLink.astro";
import Preview from "@/components/Preview.astro";

export async function getStaticPaths() {
  const notes = await getCollection("notes");
  return notes.map((n) => ({
    params: { slug: n.id },
    props: n,
  }));
}

const note = Astro.props;
const { Content } = await render(note);
---

<BaseLayout>
  <article class="container mt-16">
    <time
      class="text-muted-foreground inline-block font-medium"
      datetime={note.data.published.toISOString()}
    >
      {
        new Date(note.data.published).toLocaleDateString("en-US", {
          year: "numeric",
          month: "short",
          day: "2-digit",
          weekday: "short",
        })
      }
    </time>
    {
      note.data.title ? (
        <header class="mt-4">
          <h2 class="font-medium">
            {note.data.link ? (
              <ExternalLink href={note.data.link} text={note.data.title} />
            ) : (
              note.data.title
            )}
          </h2>
          {note.data.link ? (
            <p class="text-muted-foreground">
              {new URL(note.data.link).hostname}
            </p>
          ) : null}
        </header>
      ) : null
    }
    {
      note.data.demo ? (
        <Preview class="mt-4" src={note.data.demo} title={note.data.title} />
      ) : null
    }
    {
      note.body ? (
        <div class="prose prose-expanded mt-4">
          <Content />
        </div>
      ) : note.data.description ? (
        <div class="prose mt-4">
          <blockquote>{note.data.description}</blockquote>
        </div>
      ) : null
    }
  </article>

  <footer class="container mt-16">
    <a
      href="/notes"
      class="text-muted-foreground inline-flex items-center gap-x-1"
    >
      <Icon name="arrow-left" aria-hidden="true" />Back to all notes</a
    >
  </footer>
</BaseLayout>
