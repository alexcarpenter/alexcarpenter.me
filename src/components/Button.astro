---
import type { HTMLTag, Polymorphic } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-white dark:bg-neutral-900 [&:is(a,button)]:hover:bg-separator border border-separator",
      },
      size: {
        default: "h-9 px-4 py-2 has-[>svg]:px-3",
        sm: "h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5",
        lg: "h-10 rounded-md px-6 has-[>svg]:px-4",
        icon: "size-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> &
  VariantProps<typeof buttonVariants>;

const { as: Tag, variant, size, class: className, ...props } = Astro.props;
---

<Tag {...props} class={buttonVariants({ variant, size, className })}
  ><slot /></Tag
>
