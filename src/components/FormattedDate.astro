---
export const parseDateToString = (date: Date): string => {
  return date.toLocaleDateString("en-us", {
    timeZone: "America/New_York",
    year: "numeric",
    month: "short",
    day: "numeric",
  });
};

export const parseDateTimeToString = (date: Date): string => {
  return date.toLocaleDateString("en-us", {
    timeZone: "America/New_York",
    year: "numeric",
    month: "short",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
  });
};

export const parseTimeToString = (date: Date): string => {
  return date.toLocaleTimeString("en-us", {
    timeZone: "America/New_York",
    hour: "numeric",
    minute: "numeric",
  });
};

export const parseYearToString = (date: Date): string => {
  return date.toLocaleDateString("en-us", {
    timeZone: "America/New_York",
    year: "numeric",
  });
};

interface Props {
  date: Date;
  class?: string;
  type?: "date" | "time" | "datetime";
}

const { date, class: className, type = "date" } = Astro.props;
---

<time datetime={date.toISOString()} class:list={className}>
  {
    {
      date: parseDateToString(date),
      time: parseTimeToString(date),
      datetime: parseDateTimeToString(date),
    }[type]
  }
</time>
